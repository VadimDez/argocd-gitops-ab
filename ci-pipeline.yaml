apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: ci-pipeline
  namespace: vadym
spec:
  params:
    - name: app-repo-url
      type: string
      default: git@github.com:VadimDez/apps-ab.git
      description: "SSH url of ACE source repository, ex: git@github.com:ace-prod-ref/create-customer.git"

    - name: is-infra-repo-url
      type: string
      default: git@github.com:VadimDez/ace-infra.git
      description: "SSH url of Infrastructure repository, ex: git@github.com:ace-prod-ref/ace-infra.git"

    - name: app-repo-private-key
      type: string
      default: '""'

    - name: ace-base-image
      type: string
      default: cp.icr.io/cp/appc/ace-server-prod@sha256:1753d66293e51d8453acceb5194a8816fd9010caec7c770d07e6623b10fd3976
      description: "Base image for App Connect Interprise."

  workspaces:
    - name: shared-workspace
    - name: app-repo-secret
    - name: infra-repo-secret

  tasks:
    - name: clone-app-repo
      params:
        - name: url
          value: $(params.app-repo-url)
        - name: subdirectory
          value: is-source
        - name: deleteExisting
          value: "true"
      taskRef:
        kind: Task
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
        - name: app-repo-secret
          workspace: app-repo-secret

    - name: clone-is-infra-repo
      params:
        - name: url
          value: $(params.is-infra-repo-url)
        - name: subdirectory
          value: is-infra
        - name: deleteExisting
          value: "true"
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
        - name: ssh-directory
          workspace: infra-repo-secret

    - name: resolve-props
      params:
        - name: is-source-directory
          value: is-source
      runAfter:
        - clone-app-repo
      taskRef:
        kind: Task
        name: resolve-props
      workspaces:
        - name: input
          workspace: shared-workspace

    - name: build-bar
      params:
        - name: is-source-directory
          value: is-source
        - name: is-application-name
          value: $(tasks.resolve-props.results.is-application-name)
        - name: is-project
          value: $(tasks.resolve-props.results.is-project)
      runAfter:
        - resolve-props
      taskRef:
        kind: Task
        name: build-bar
      workspaces:
        - name: workspace
          workspace: shared-workspace

    - name: build-is-image
      params:
        - name: BUILD_EXTRA_ARGS
          value: --build-arg BASE=$(params.ace-base-image)
        - name: TLSVERIFY
          value: "false"
        - name: IMAGE
          value: $(tasks.resolve-props.results.registry-host)/$(context.pipelineRun.namespace)/$(tasks.resolve-props.results.is-release-name):$(tasks.clone-app-repo.results.commit)
        - name: DOCKERFILE
          value: $(workspaces.source.path)/is-infra/Dockerfile
        - name: CONTEXT
          value: $(workspaces.source.path)/bars
      runAfter:
        - clone-is-infra-repo
        - build-bar
      taskRef:
        kind: ClusterTask
        name: buildah
      workspaces:
        - name: source
          workspace: shared-workspace

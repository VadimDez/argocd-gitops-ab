apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build-bar
spec:
  params:
    - name: is-source-directory
      type: string
      description: directory where ACE source is located, relative to workspace
    - name: is-application-names
      type: array
      description: name list of the application
    - name: is-projects
      type: array
      description: array of arrays - list of projects

  steps:
    - image: icr.io/appc-dev/ace-server:12.0.2.0-r2-20211115-123200-amd64
      name: generate-bar
      args:
        - $(params.is-projects[*])
      script: |
        #!/usr/bin/env bash

        echo "=============="
        echo ${params.is-application-names[@]}
        echo "=============="

        function deserialize_array() {
          IFS="${3:-$'\x01'}" read -r -a "${2}" <<<"${!1}" # -a => split on IFS
        }

        rm -rf $(workspaces.workspace.path)/bars
        mkdir -p $(workspaces.workspace.path)/bars


        for integrationServer in $@; do
          # clear source folder
          rm -rf $(workspaces.workspace.path)/source
          mkdir $(workspaces.workspace.path)/source
          echo "integrationServer: ${integrationServer}"
          project_options=""

          deserialize_array integrationServer barsArray '|'

          for barsList in "${barsArray[@]}"; do
            echo "barsList: ${barsList[@]}"

            deserialize_array barsList projects ';'
            declare -p projects

            for project in "${projects[@]}"; do
                echo "project in bar list: ${project}"
                cp -r $(workspaces.workspace.path)/$(params.is-source-directory)/${project} $(workspaces.workspace.path)/source/${project}
                project_options="--project ${project} ${project_options}"
            done
            ls $(workspaces.workspace.path)/source

            . /opt/ibm/ace-12/server/bin/mqsiprofile

          done
        done
  workspaces:
    - name: workspace
